'use strict';

module.exports.RGBToCMYK = function RGBToCMYK(_r, _g, _b) {
  var computedC = void 0;
  var computedM = void 0;
  var computedY = void 0;
  var computedK = void 0;

  // remove spaces from input RGB values, convert to int
  var r = parseInt(('' + _r).replace(/\s/g, ''), 10);
  var g = parseInt(('' + _g).replace(/\s/g, ''), 10);
  var b = parseInt(('' + _b).replace(/\s/g, ''), 10);

  if (r == null || g == null || b == null || isNaN(r) || isNaN(g) || isNaN(b)) {
    console.warn('Please enter numeric RGB values!');
    return;
  }
  if (r < 0 || g < 0 || b < 0 || r > 255 || g > 255 || b > 255) {
    console.warn('RGB values must be in the range 0 to 255.');
    return;
  }

  // BLACK
  if (r === 0 && g === 0 && b === 0) {
    computedK = 1;
    return [0, 0, 0, 1];
  }

  computedC = 1 - r / 255;
  computedM = 1 - g / 255;
  computedY = 1 - b / 255;

  var minCMY = Math.min(computedC, Math.min(computedM, computedY));
  computedC = (computedC - minCMY) / (1 - minCMY);
  computedM = (computedM - minCMY) / (1 - minCMY);
  computedY = (computedY - minCMY) / (1 - minCMY);
  computedK = minCMY;

  return [computedC, computedM, computedY, computedK];
};