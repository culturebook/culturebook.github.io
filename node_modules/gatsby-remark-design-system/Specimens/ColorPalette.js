'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ty = require('tinycolor2');
var _colors = require('../utils/colors');

module.exports = function () {
  function ColorPalette(classPrefix, valueMap) {
    _classCallCheck(this, ColorPalette);

    this.classPrefix = classPrefix;
    this.valueMap = valueMap;
  }

  _createClass(ColorPalette, [{
    key: 'colors',
    value: function colors() {
      var _this = this;

      return this.valueMap.map(function (c) {
        var tyColor = ty(c.color);
        var hex = tyColor.toHexString();
        var rgb = tyColor.toRgb();
        var cmyk = _colors.RGBToCMYK(rgb.r, rgb.g, rgb.b);
        return '\n        <div class="' + _this.classPrefix + '-color-palette__item">\n          <div class="' + _this.classPrefix + '-color-palette__left">\n            <div class="' + _this.classPrefix + '-color-palette__item__swatch" style="background: ' + c.color + '"></div>\n            <div class="' + _this.classPrefix + '-color-palette__item__name">\n              ' + c.name + '\n            </div>\n          </div>\n          <div class="' + _this.classPrefix + '-color-palette__right">\n            <div class="' + _this.classPrefix + '-color-palette__item__color">\n              <span>HEX</span>\n              <span>' + hex + '</span>\n            </div>\n            <div class="' + _this.classPrefix + '-color-palette__item__color">\n              <span>RGB</span>\n              <span>' + rgb.r + ', ' + rgb.g + ', ' + rgb.b + '</span>\n            </div>\n            <div class="' + _this.classPrefix + '-color-palette__item__color">\n              <span>CMYK</span>\n              <span>' + cmyk.C + ', ' + cmyk.M + ', ' + cmyk.Y + ', ' + cmyk.K + '</span>\n            </div>\n          </div>\n        </div>\n        ';
      }).join('');
    }
  }, {
    key: 'output',
    value: function output() {
      return '\n      <div class="' + this.classPrefix + '-color-palette__container">\n        ' + this.colors() + '\n      </div>\n    ';
    }
  }]);

  return ColorPalette;
}();