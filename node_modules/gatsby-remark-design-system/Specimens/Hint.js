'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

module.exports = function () {
  function Hint(classPrefix, nodeValue) {
    var SpecimenOption = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'neutral';

    _classCallCheck(this, Hint);

    this.classPrefix = classPrefix;
    this.nodeValue = nodeValue;
    this.SpecimenOption = SpecimenOption;
  }

  _createClass(Hint, [{
    key: 'option',
    value: function option() {
      if (this.SpecimenOption === 'directive') {
        return this.classPrefix + '-hint__directive';
      } else if (this.SpecimenOption === 'warning') {
        return this.classPrefix + '-hint__warning';
      }
      return '';
    }
  }, {
    key: 'output',
    value: function output() {
      return '\n    <div class="' + this.classPrefix + '-hint ' + this.option() + '">\n      ' + this.nodeValue + '\n    </div>\n    ';
    }
  }]);

  return Hint;
}();